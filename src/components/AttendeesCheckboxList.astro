---
import type { Guest } from "@domain/Guest";

export interface Props {
	guest: Guest;
}

const guest = Astro.props.guest;
const declined = guest.declined;
---

<fieldset
  class="grid grid-cols-2 space-y-2 py-2"
  x-data=`{ enable: ${!declined} }`
>
  <leyend class="font-bold col-span-2">Asistentes:</leyend>
  {
    guest.expectedAttendees.map((att) => (
      <label for={att} class={`flex items-cente ${declined ? 'opacity-40' : ''}`}>
        <input
          id={att}
          name={att}
          type="checkbox"
          class="attendee-checkbox mx-2 accent-slate-500"
          disabled={declined}
          checked={!declined && guest.confirmedAttendees?.includes(att)}
          hx-get={`/${guest.uuid}/api/validate-attendees`}
          hx-include=".attendee-checkbox"
          hx-target="#confirm-submit"
          hx-swap="innerHTML"
          @decline-changed.window={`
            $event.detail.declined ? $el.setAttribute('disabled','disabled') : $el.removeAttribute("disabled");
            $el.closest("label").classList.toggle('opacity-40', $event.detail.declined);
            $el.checked = false;
          `}
        />
        {att}
      </label>
    ))
  }
  <label for="declineInvitation" class="flex items-center cursor-pointer">
    <input
      id="declineInvitation"
      name="declineInvitation"
      type="checkbox"
      class="attendee-checkbox mx-2 accent-slate-500"
      checked={declined}
      x-on:change="$dispatch('decline-changed', {declined: $el.checked})"
      hx-get={`/${guest.uuid}/api/validate-attendees`}
      hx-include=".attendee-checkbox"
      hx-target="#confirm-submit"
      hx-swap="innerHTML"
    />
    No podremos asistir
  </label>
</fieldset>
